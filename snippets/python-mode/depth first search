# -*- mode: snippet -*-
# name: depth first search
# key: dfs
# --

# class Node:
#     def __init__(self, value, children=[]):
#         self.value = value
#         self.children = children 
def dfs_recursive(node, visited):
    visited.add(node)

    for child in node:
        if child not in visited:		
            dfs_recursive(child, visited)

# iterative
def dfs(node):
    visited = set()
    stack = [node]		

    while stack:
        vertex = stack.pop()		
        if vertex not in visited:
            visited.add(vertex)			

            for child in vertex:
                if child not in visited:
                    stack.append(child)							
        